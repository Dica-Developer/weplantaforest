buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
        classpath "gradle.plugin.gradle-plugins:jartest:1.0"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'project-report'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'com.github.hauner.jarTest'

jar {
    baseName = 'wpaf'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa:' + springBootVersion)
    compile('org.springframework.boot:spring-boot-starter-data-rest:' + springBootVersion)
    compile('org.springframework.data:spring-data-rest-hal-browser:2.4.1.RELEASE')
    compile('org.springframework.boot:spring-boot-devtools:' + springBootVersion)
//    compile('org.springframework.boot:spring-boot-starter-security:' + springBootVersion)
    compile('org.springframework.boot:spring-boot-starter-validation:' + springBootVersion)
    compile 'org.springframework:spring-context-support:4.1.8.RELEASE'

    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.3')
    compile('com.fasterxml.jackson.module:jackson-module-parameter-names:2.6.3')

    compile group: 'org.flywaydb', name: 'flyway-core', version: '3.1'
    compile('com.jayway.jsonpath:json-path:2.1.0')
    runtime('com.h2database:h2:1.4.190')
//    runtime('mysql:mysql-connector-java')
    compile 'com.google.code.findbugs:jsr305:3.0.1'
    compile 'com.google.code.findbugs:findbugs:3.0.1'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    compile('org.projectlombok:lombok:1.16.6')

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '1.7.1'
    testCompile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.4.1'
    testCompile('org.springframework.boot:spring-boot-starter-test:' + springBootVersion) 
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc:1.0.0.RELEASE')
}

mainClassName = 'org.dicadeveloper.weplantaforest.WeplantaforestCommonApplication'

eclipse {
    jdt.file.withProperties { properties ->
        properties.put('org.eclipse.jdt.core.formatter.lineSplit', '200')
        properties.put('org.eclipse.jdt.core.formatter.tabulation.char', 'space')
    }
}

test {
    testLogging {
        events 'passed'
    }
    if (project.hasProperty('mysql')) {
        logger.info "Running tests on mysql db!"
        systemProperty "spring.profiles.active", "test,mysql-test"
    } else {
        def maxForks = Runtime.getRuntime().availableProcessors()
        if (System.env.'CI') {
            jacoco {
                enabled true
            }
        }
        logger.info "Maximum used parallel forks: " + maxForks
        maxParallelForks maxForks
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}


