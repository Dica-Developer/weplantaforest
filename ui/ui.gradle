buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}

apply plugin: 'com.github.kt3k.coveralls'

task testUi << {
    def process = "grunt test".execute(null, new File("src/main/webapp"))
    process.text.eachLine {
        println it
    }
    if (0 != process.exitValue()) {
        throw new org.gradle.tooling.BuildActionFailureException("grunt test in webapp failed with " + process.exitValue(), null)
    }
}

task setupUiDev << {
    def process = "npm install -g yo grunt-cli bower".execute()
    process.text.eachLine {
        println it
    }
    if (0 != process.exitValue()) {
        throw new org.gradle.tooling.BuildActionFailureException("npm install in root failed with " + process.exitValue(), null)
    }
    process = "npm install".execute(null, new File("src/main/webapp"))
    process.text.eachLine {
        println it
    }
    if (0 != process.exitValue()) {
        throw new org.gradle.tooling.BuildActionFailureException("npm install in webapp failed with " + process.exitValue(), null)
    }
    process = "bower install".execute(null, new File("src/main/webapp"))
    process.text.eachLine {
        println it
    }
    if (0 != process.exitValue()) {
        throw new org.gradle.tooling.BuildActionFailureException("bower install in webapp failed with " + process.exitValue(), null)
    }
}

task buildUi << {
    def process = "grunt build".execute(null, new File("src/main/webapp"))
    process.text.eachLine {
        println it
    }
    if (0 != process.exitValue()) {
        throw new org.gradle.tooling.BuildActionFailureException("grunt build failed with " + process.exitValue(), null)
    }
}
build.dependsOn buildUi

buildUi.dependsOn setupUiDev

task watchUiDev << {
    "grunt dev".execute(null, new File("src/main/webapp"))
}
bootRun.dependsOn watchUiDev

liveReload {
    docRoot='src/main/webapp/client'
}
