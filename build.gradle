buildscript {
  ext {
    springBootVersion = '1.5.1.RELEASE'
  }
  repositories {
    mavenCentral()
      jcenter()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath 'org.hidetake:gradle-ssh-plugin:2.6.0'
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.6.3'
  }
}

apply from: "${rootDir}/gradle/banner.gradle"
apply from: "${rootDir}/gradle/envInfo.gradle"

apply plugin: 'org.hidetake.ssh'
apply plugin: 'com.github.kt3k.coveralls'

repositories {
  mavenCentral()
  maven {
    url "http://repo.spring.io/milestone"
  }
}

version = '0.1'

task testReport(type: TestReport, group: 'Build') {
  description = 'Generates an aggregate test report'
  destinationDir = file("${buildDir}/reports/allTests")
}

allprojects {
  apply plugin: 'jacoco'
  apply plugin: 'project-report'
}

apply from: "${rootDir}/gradle/subProjects.gradle"
apply from: "${rootDir}/gradle/deploy.gradle"

// Only report code coverage for projects that are distributed
def publishedProjects = subprojects.findAll {it.path != ':testkit'}

task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
  description = 'Generates an aggregate report from all subprojects'
  dependsOn(publishedProjects.test)

  additionalSourceDirs = files(publishedProjects.sourceSets.main.allSource.srcDirs)
  sourceDirectories = files(publishedProjects.sourceSets.main.allSource.srcDirs)
  classDirectories = files(publishedProjects.sourceSets.main.output)
  executionData = files(publishedProjects.jacocoTestReport.executionData)

  reports {
    html.enabled = true // human readable
    xml.enabled = true // required by coveralls
  }

  doFirst {
    logger.lifecycle "started doFirst"
    executionData = files(executionData.findAll { it.exists() })
  }
}

coveralls {
  sourceDirs = publishedProjects.sourceSets.main.allSource.srcDirs.flatten()
  jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

tasks.coveralls {
  group = 'Coverage reports'
  description = 'Uploads the aggregated coverage report to Coveralls'

  dependsOn jacocoRootReport
  onlyIf { System.env.'CI' }
}
