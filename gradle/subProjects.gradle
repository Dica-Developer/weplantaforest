subprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'eclipse'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  compileJava.options.encoding = 'UTF-8'

  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
  }

  archivesBaseName = path[1..-1].replaceAll(':', '-').toLowerCase()
  
  eclipse {
    jdt.file.withProperties { properties ->
      properties.put('org.eclipse.jdt.core.formatter.lineSplit', '200')
      properties.put('org.eclipse.jdt.core.formatter.tabulation.char', 'space')
    }
  }
  
  test {  
  	if (project != project(':testkit')) {
      testLogging {
        events 'passed'
      }
      if (project.hasProperty('mysql')) {
        logger.info "Running tests on mysql db!"
        systemProperty "spring.profiles.active", "test,mysql-test"
      }
    
    
      def maxForks = Runtime.getRuntime().availableProcessors()
      logger.lifecycle "Maximum used parallel forks for " + project + ": " + maxForks
      maxParallelForks maxForks	 
    
      if (System.env.'CI') {
        jacoco {
          enabled true
        }
      } else {
        jacoco {
          enabled false
        }
      }
    }
  }  

  configurations {
    testArtifacts
  }

  tasks.withType(Test) {
    rootProject.testReport.reportOn it
    it.dependsOn('jar')

    // ensure tasks don't overwrite the default report directories used by the 'test' task
    reports.html.destination = "${buildDir}/reports/${name}"
    reports.junitXml.destination = "${buildDir}/reports/${name}/results"
    binResultsDir = file("${buildDir}/reports/${name}/results/binary/${name}")
  }

  task testJar(type: Jar, group: 'Build') {
    description = 'Assembles a jar archive containing the test classes.'
    baseName = "${archivesBaseName}-test"
    from sourceSets.test.output
  }

  artifacts {
    testArtifacts testJar
  }
  

}


